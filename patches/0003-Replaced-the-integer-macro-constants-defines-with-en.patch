From e41fb44f5d7e7d93336bafb8534e4363e151b9ec Mon Sep 17 00:00:00 2001
From: KOLANICH <KOLANICH@users.noreply.github.com>
Date: Thu, 14 Jul 2022 00:00:00 +0000
Subject: [PATCH 3/5] Replaced the integer macro constants defines with enums
 in `Arduino.h`.

---
 hardware/arduino/avr/cores/arduino/Arduino.h | 154 +++++++++++--------
 1 file changed, 92 insertions(+), 62 deletions(-)

diff --git a/hardware/arduino/avr/cores/arduino/Arduino.h b/hardware/arduino/avr/cores/arduino/Arduino.h
index 6ab4e48..810b49c 100644
--- a/hardware/arduino/avr/cores/arduino/Arduino.h
+++ b/hardware/arduino/avr/cores/arduino/Arduino.h
@@ -20,6 +20,12 @@
 #ifndef Arduino_h
 #define Arduino_h
 
+#ifdef __cplusplus
+  #define ARD_CHAR_ENUM_lAnoShw : char
+#else
+  #define ARD_CHAR_ENUM_lAnoShw
+#endif
+
 #include <stdlib.h>
 #include <stdbool.h>
 #include <string.h>
@@ -37,12 +43,16 @@ extern "C"{
 
 void yield(void);
 
-#define HIGH 0x1
-#define LOW  0x0
+enum ARD_CHAR_ENUM_lAnoShw{
+  LOW = 0x0,
+  HIGH = 0x1
+};
 
-#define INPUT 0x0
-#define OUTPUT 0x1
-#define INPUT_PULLUP 0x2
+enum ARD_CHAR_ENUM_lAnoShw{
+  INPUT = 0x0,
+  OUTPUT = 0x1,
+  INPUT_PULLUP = 0x2
+};
 
 #define PI 3.1415926535897932384626433832795
 #define HALF_PI 1.5707963267948966192313216916398
@@ -51,38 +61,50 @@ void yield(void);
 #define RAD_TO_DEG 57.295779513082320876798154814105
 #define EULER 2.718281828459045235360287471352
 
-#define SERIAL  0x0
-#define DISPLAY 0x1
+enum ARD_CHAR_ENUM_lAnoShw{
+  SERIAL = 0x0,
+  DISPLAY = 0x1
+};
 
-#define LSBFIRST 0
-#define MSBFIRST 1
+enum ARD_CHAR_ENUM_lAnoShw{
+  LSBFIRST = 0,
+  MSBFIRST = 1
+};
 
-#define CHANGE 1
-#define FALLING 2
-#define RISING 3
+enum ARD_CHAR_ENUM_lAnoShw{
+  CHANGE= 1,
+  FALLING = 2,
+  RISING = 3
+};
 
 #if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
-  #define DEFAULT 0
-  #define EXTERNAL 1
-  #define INTERNAL1V1 2
-  #define INTERNAL INTERNAL1V1
+  enum ARD_CHAR_ENUM_lAnoShw{
+    DEFAULT = 0,
+    EXTERNAL = 1,
+    INTERNAL1V1 = 2,
+    INTERNAL = INTERNAL1V1,
+  };
 #elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
-  #define DEFAULT 0
-  #define EXTERNAL 4
-  #define INTERNAL1V1 8
-  #define INTERNAL INTERNAL1V1
-  #define INTERNAL2V56 9
-  #define INTERNAL2V56_EXTCAP 13
-#else  
+  enum ARD_CHAR_ENUM_lAnoShw{
+    DEFAULT = 0,
+    EXTERNAL = 4,
+    INTERNAL1V1 = 8,
+    INTERNAL = INTERNAL1V1,
+    INTERNAL2V56 = 9,
+    INTERNAL2V56_EXTCAP = 13,
+  };
+#else
+enum ARD_CHAR_ENUM_lAnoShw{
 #if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)
-#define INTERNAL1V1 2
-#define INTERNAL2V56 3
+  INTERNAL1V1 = 2,
+  INTERNAL2V56 = 3,
 #else
-#define INTERNAL 3
+  INTERNAL = 3,
 #endif
-#define DEFAULT 1
-#define EXTERNAL 0
+  DEFAULT = 1,
+  EXTERNAL = 0,
 #endif
+};
 
 // undefine stdlib's abs if encountered
 #ifdef abs
@@ -255,45 +277,51 @@ extern const uint8_t PROGMEM digital_pin_to_timer_PGM[];
 #define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )
 #define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )
 
-#define NOT_A_PIN 0
-#define NOT_A_PORT 0
+enum ARD_CHAR_ENUM_lAnoShw{
+  NOT_A_PIN = 0,
+  NOT_A_PORT = 0,
 
-#define NOT_AN_INTERRUPT -1
+  NOT_AN_INTERRUPT = -1,
+};
 
 #ifdef ARDUINO_MAIN
-#define PA 1
-#define PB 2
-#define PC 3
-#define PD 4
-#define PE 5
-#define PF 6
-#define PG 7
-#define PH 8
-#define PJ 10
-#define PK 11
-#define PL 12
+enum ARD_CHAR_ENUM_lAnoShw{
+  PA = 1,
+  PB = 2,
+  PC = 3,
+  PD = 4,
+  PE = 5,
+  PF = 6,
+  PG = 7,
+  PH = 8,
+  PJ = 10,
+  PK = 11,
+  PL = 12,
+};
 #endif
 
-#define NOT_ON_TIMER 0
-#define TIMER0A 1
-#define TIMER0B 2
-#define TIMER1A 3
-#define TIMER1B 4
-#define TIMER1C 5
-#define TIMER2  6
-#define TIMER2A 7
-#define TIMER2B 8
-
-#define TIMER3A 9
-#define TIMER3B 10
-#define TIMER3C 11
-#define TIMER4A 12
-#define TIMER4B 13
-#define TIMER4C 14
-#define TIMER4D 15
-#define TIMER5A 16
-#define TIMER5B 17
-#define TIMER5C 18
+enum ARD_CHAR_ENUM_lAnoShw{
+  NOT_ON_TIMER = 0,
+  TIMER0A = 1,
+  TIMER0B = 2,
+  TIMER1A = 3,
+  TIMER1B = 4,
+  TIMER1C = 5,
+  TIMER2  = 6,
+  TIMER2A = 7,
+  TIMER2B = 8,
+
+  TIMER3A = 9,
+  TIMER3B = 10,
+  TIMER3C = 11,
+  TIMER4A = 12,
+  TIMER4B = 13,
+  TIMER4C = 14,
+  TIMER4D = 15,
+  TIMER5A = 16,
+  TIMER5B = 17,
+  TIMER5C = 18,
+};
 
 #ifdef __cplusplus
 } // extern "C"
@@ -327,6 +355,8 @@ long map(long, long, long, long, long);
 
 #endif
 
+#undef ARD_CHAR_ENUM_lAnoShw
+
 #include "pins_arduino.h"
 
 #endif
-- 
2.32.0

